name: Update Solutions Exchange Data

on:
  schedule:
    # Run daily at 6 AM UTC (7 AM BST / 8 AM CEST)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    paths:
      - 'scripts/update_repositories.py'
      - 'scripts/private_repo_and_user_count.py'
      - '.github/workflows/update-data.yml'

jobs:
  update-repositories:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Allow the workflow to commit changes
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Fetch and update repository data
      env:
        solutions_exchange_secret: ${{ secrets.solutions_exchange_secret }}
      run: |
        python scripts/update_repositories.py
        
    - name: Fetch private metrics data
      env:
        solutions_exchange_secret: ${{ secrets.solutions_exchange_secret }}
      run: |
        python scripts/private_repo_and_user_count.py
        
    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet data/repositories.json data/private_metrics.json; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected in repository data"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected in repository data"
          git diff --stat data/repositories.json data/private_metrics.json
        fi
        
    - name: Commit and push changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/repositories.json data/private_metrics.json
        git commit -m "🤖 Automated update of Solutions Exchange data
        
        - Updated repository information
        - Enhanced with AI-generated tags
        - Quality scores calculated
        - Featured solutions identified
        - Updated private metrics data
        
        Triggered by: ${{ github.event_name }}
        Commit: ${{ github.sha }}"
        git push
        
    - name: Create update summary
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        echo "## 📊 Solutions Exchange Data Update" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Repository data has been successfully updated!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Changes Made:" >> $GITHUB_STEP_SUMMARY
        echo "- Fetched latest repository information from NHS Wales organizations" >> $GITHUB_STEP_SUMMARY
        echo "- Generated AI-powered tags for improved discoverability" >> $GITHUB_STEP_SUMMARY
        echo "- Calculated quality scores based on activity and documentation" >> $GITHUB_STEP_SUMMARY
        echo "- Identified featured solutions using quality criteria" >> $GITHUB_STEP_SUMMARY
        echo "- Updated private repository and organization metrics" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Changes have been committed to the repository" >> $GITHUB_STEP_SUMMARY
        echo "- Website will automatically reflect updated data" >> $GITHUB_STEP_SUMMARY
        echo "- Featured solutions section will show new recommendations" >> $GITHUB_STEP_SUMMARY
        
    - name: No changes summary
      if: steps.check_changes.outputs.changes == 'false'
      run: |
        echo "## 📊 Solutions Exchange Data Update" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ℹ️ No changes detected in repository data." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The Solutions Exchange data is already up to date!" >> $GITHUB_STEP_SUMMARY
        
    - name: Create deployment artifact
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        echo "Solutions Exchange data updated successfully at $(date)" > deployment-log.txt
        echo "Total repositories processed: $(jq length data/repositories.json)" >> deployment-log.txt
        echo "Private repositories: $(jq .private_repos data/private_metrics.json)" >> deployment-log.txt
        echo "Organizations: $(jq .organizations data/private_metrics.json)" >> deployment-log.txt
        
    - name: Deploy to GitHub Pages
      if: steps.check_changes.outputs.changes == 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github,*.py,*.csv,*.md,*.docx,*.xlsx,*.png'
